{
    "swagger": "2.0",
    "info": {
        "title": "StarredUp API",
        "version": "1.0"
    },
    "host": "127.0.0.1:8000",
    "schemes": [
        "http"
    ],
    "paths": {
        "/members": {},
        "/products": {},
        "/reviews": {},
        "/swagger": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/members/{memberId}": {
            "get": {
                "tags": [
                    "members"
                ],
                "summary": "Get a single member by ID",
                "description": "Return JSON object of a single member",
                "operationId": "getMember",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "memberId",
                        "in": "path",
                        "description": "Member ID of the desired member",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success => [member => {member}]"
                    },
                    "404": {
                        "description": "No member found for ID: {memberId}"
                    }
                }
            }
        },
        "/members/add": {
            "post": {
                "tags": [
                    "members"
                ],
                "summary": "Save or Update a single member with a payload",
                "description": "Return JSON with the effected member ID",
                "operationId": "addMember",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Update a member by adding the memberId to the payload",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Member"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success => [memberId => {memberId}]"
                    },
                    "404": {
                        "description": "No member found for id {memberId}"
                    }
                }
            }
        },
        "/members/{memberId}/remove": {
            "post": {
                "tags": [
                    "members"
                ],
                "summary": "Deactivate a member",
                "description": "Return JSON object of the effected member and isActive status",
                "operationId": "removeMember",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "memberId",
                        "in": "path",
                        "description": "The member ID of the member to be deactivated",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success => [memberId => {memberId}, isActive => {isActive}]"
                    },
                    "404": {
                        "description": "No member found for ID: {memberId}"
                    },
                    "409": {
                        "description": "Member has already been removed"
                    }
                }
            }
        },
        "/products/{productId}": {
            "get": {
                "tags": [
                    "products"
                ],
                "summary": "Get a single product by ID",
                "description": "Return JSON object of a single product",
                "operationId": "getProduct",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "productId",
                        "in": "path",
                        "description": "Product ID of the desired product",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success => [product => {product}]"
                    },
                    "404": {
                        "description": "No product found for ID: {productId}"
                    }
                }
            }
        },
        "/products/add": {
            "post": {
                "tags": [
                    "products"
                ],
                "summary": "Save or Update a single product with a payload",
                "description": "Return JSON with the effected product ID",
                "operationId": "addProduct",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Update a product by adding the productId to the payload",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Product"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success => [productId => {productId}]"
                    },
                    "404": {
                        "description": "No product found for id {productId}"
                    }
                }
            }
        },
        "/products/{productId}/remove": {
            "post": {
                "tags": [
                    "products"
                ],
                "summary": "Deactivate a product",
                "description": "Return JSON object of the effected product and isActive status",
                "operationId": "removeProduct",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "productId",
                        "in": "path",
                        "description": "The product ID of the product to be deactivated",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success => [productId => {productId}, isActive => {isActive}]"
                    },
                    "404": {
                        "description": "No product found for ID: {productId}"
                    },
                    "409": {
                        "description": "Product has already been removed"
                    }
                }
            }
        },
        "/reviews/{reviewId}": {
            "get": {
                "tags": [
                    "reviews"
                ],
                "summary": "Get a single review by ID",
                "description": "Return JSON object of a single review",
                "operationId": "getReview",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "reviewId",
                        "in": "path",
                        "description": "Review ID of the desired review",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success => [product => {product}]"
                    },
                    "404": {
                        "description": "No product found for ID: {productId}"
                    }
                }
            }
        },
        "/reviews/add": {
            "post": {
                "tags": [
                    "reviews"
                ],
                "summary": "Adds a new review",
                "description": "Adds a new review",
                "operationId": "addReview",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Updates a review based on this data",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Review"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success => [review => {review}]"
                    },
                    "404": {
                        "description": "No review found for ID: {reviewId}"
                    }
                }
            }
        },
        "/reviews/{reviewId}/remove": {
            "post": {
                "tags": [
                    "reviews"
                ],
                "summary": "Deactivate a review",
                "description": "Return JSON object of the effected review and isActive status",
                "operationId": "removeReview",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "reviewId",
                        "in": "path",
                        "description": "The ID of the review to be deactivated",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success => [reviewId => {reviewId}, isActive => {isActive}]"
                    },
                    "404": {
                        "description": "No review found for ID: {reviewId}"
                    },
                    "409": {
                        "description": "Review has already been removed"
                    }
                }
            }
        }
    },
    "definitions": {
        "Member": {
            "required": [
                "MemberName",
                "First_Name",
                "Last_Name",
                "Email",
                "Password",
                "dob"
            ],
            "type": "object"
        },
        "Product": {
            "required": [
                "productName",
                "upc"
            ],
            "properties": {
                "productId": {
                    "type": "integer",
                    "example": 1
                },
                "productName": {
                    "type": "string",
                    "example": "Amazon Echo"
                },
                "productDescription": {
                    "type": "string",
                    "example": "null"
                },
                "productRating": {
                    "type": "number",
                    "format": "float",
                    "example": "null"
                },
                "reviewCount": {
                    "type": "integer",
                    "example": "null"
                },
                "productManufacturer": {
                    "type": "string",
                    "example": "Amazon"
                },
                "upc": {
                    "type": "string",
                    "example": "848719071733"
                },
                "productImage": {
                    "type": "string",
                    "example": "null"
                }
            },
            "type": "object"
        },
        "Review": {
            "required": [
                "reviewId"
            ],
            "properties": {
                "reviewId": {
                    "description": "",
                    "type": "integer",
                    "example": 1
                },
                "productId": {
                    "description": "",
                    "type": "integer",
                    "example": 1
                },
                "memberId": {
                    "description": "",
                    "type": "integer",
                    "example": 1
                },
                "originalMemberId": {
                    "description": "",
                    "type": "integer",
                    "example": 1
                },
                "reviewTitle": {
                    "description": "",
                    "type": "string",
                    "example": "Very Good"
                },
                "description": {
                    "description": "",
                    "type": "string",
                    "example": "Very Good"
                },
                "rating": {
                    "description": "",
                    "type": "number",
                    "format": "double",
                    "example": 4.5
                }
            },
            "type": "object"
        }
    }
}